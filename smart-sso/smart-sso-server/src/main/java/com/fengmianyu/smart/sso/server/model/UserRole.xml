<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fengmianyu.smart.sso.server.dao.UserRoleDao">
	<resultMap id="UserMap" type="com.fengmianyu.smart.sso.server.model.User" >
	    <id column="id" property="id" jdbcType="VARCHAR" />
	    <result column="job_no" property="jobNo" jdbcType="VARCHAR" />
	    <result column="account" property="account" jdbcType="VARCHAR" />
	    <result column="password" property="password" jdbcType="VARCHAR" />
	    <result column="org_id" property="orgId" jdbcType="INTEGER" />
	    <result column="user_name" property="userName" jdbcType="VARCHAR" />
	    <result column="gender" property="gender" jdbcType="INTEGER" />
	    <result column="user_type" property="userType" jdbcType="INTEGER" />
	    <result column="issys" property="isSys" jdbcType="BOOLEAN" />
	    <result column="isEnable" property="isEnable" jdbcType="BOOLEAN" />
  	</resultMap>
  	
	<select id="findByUserRoleId" parameterType="map" resultType="UserRole">   
		SELECT * 
     	FROM SYS_RE_USER_ROLE a
     	WHERE 1 = 1
     	<if test="userId != null">
			AND a.userId = #{userId} 
		</if>
		<if test="roleId != null">
			AND a.roleId = #{roleId} 
		</if>
	</select>

	<insert id="save" parameterType="UserRole" statementType="PREPARED" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO SYS_RE_USER_ROLE(
			appId,
			userId,
			roleId
		) 
		VALUES (
			#{appId},
			#{userId},
			#{roleId}
		)
	</insert>
	
	<select id="getRoleUsers" parameterType="map" resultMap="UserMap">   
		SELECT T.id, T.job_no, T.user_name, T.user_type, T.account FROM SYS_USER T
		WHERE
			EXISTS (
				SELECT 1 FROM SYS_RE_USER_ROLE T1
				WHERE T.id = T1.userID AND T1.roleId = #{roleId}
			)
	</select>
	
	<select id="getNotRoleUsers" parameterType="map" resultMap="UserMap">   
		SELECT T.id, T.job_no, T.user_name, T.user_type, T.account FROM SYS_USER T
		WHERE
			NOT EXISTS (
				SELECT 1 FROM SYS_RE_USER_ROLE T1
				WHERE T.id = T1.userID AND T1.roleId = #{roleId}
			)
			AND EXISTS (
				SELECT 1 FROM sys_re_user_app T2 
				WHERE T.id = T2.userId AND T2.appId = #{appId}
			)
			AND T.isEnable = TRUE
	</select>

	<delete id="deleteByRoleIds" parameterType="map" statementType="PREPARED">
		DELETE FROM SYS_RE_USER_ROLE
		WHERE 1 = 1
		<if test="idList != null">
			AND roleId in <foreach collection="idList" item="item" open="(" separator="," close=")">#{item}</foreach>
		</if>
	</delete>
	
	<delete id="deleteByUserIds" parameterType="map" statementType="PREPARED">
		DELETE FROM SYS_RE_USER_ROLE
		WHERE 1 = 1
		<if test="appId != null">
			AND appId = #{appId}
		</if>
		<if test="idList != null">
			AND userId in <foreach collection="idList" item="item" open="(" separator="," close=")">#{item}</foreach>
		</if>
	</delete>
	
	<delete id="deleteByRoleIdsAndAppId" parameterType="map" statementType="PREPARED">
		DELETE FROM SYS_RE_USER_ROLE
		WHERE 1 = 1
		<if test="appId != null">
			AND appId = #{appId}
		</if>
		<if test="idList != null">
			AND roleId in <foreach collection="idList" item="item" open="(" separator="," close=")">#{item}</foreach>
		</if>
	</delete>
	
	<delete id="deleteByAppIds" parameterType="map" statementType="PREPARED">
		DELETE FROM SYS_RE_USER_ROLE
		WHERE 1 = 1
		<if test="idList != null">
			AND appId in <foreach collection="idList" item="item" open="(" separator="," close=")">#{item}</foreach>
		</if>
	</delete>
	
	<delete id="deleteForChangeApp" parameterType="map" statementType="PREPARED">
		DELETE FROM SYS_RE_USER_ROLE
		WHERE 1 = 1
		<if test="userId != null">
			AND userId = #{userId} 
		</if>
		<if test="idList != null ">
			AND appId not in <foreach collection="idList" item="item" open="(" separator="," close=")">#{item}</foreach>
		</if>
	</delete>
</mapper>